name: Update JS Filename Timestamp

on:
  push:
    paths:
      - 'js/mylib/*.js'

jobs:
  update-timestamp:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate Beijing Time
        id: beijing-time
        run: |
          BEIJING_TIME=$(TZ='Asia/Shanghai' date +'%Y%m%d%H%M')
          echo "::set-output name=time::$BEIJING_TIME"

      - name: Update Filenames and Manage Files
        run: |
          # 【用户需求注释开始】
          # 判断js文件的开头的判断方法是,移除文件名的&t=及其之后的所有内容,留下来的内容就是开头.例如mylib&t=202502161348.js的开头就是mylib.
          # 1.每次当前仓库/js/mylib/路径下的js文件提交修改时,预先复制一份原始文件(例如mylib&t=202502161348.js)到当前路径下,新增第1个文件;然后将修改后的文件的文件名中的t=YYYYMMddhhmm这一部分替换为最新的北京时间,例如mylib&t=202502161348.js就替换为mylib&t=202503201111.js,新增第2个文件.(必须基于当前真实北京时间);
          # 2.然后判断js/mylib/路径下有几个以mylib开头的js文件,如果文件超过3个,则循环删除日期最旧的以mylib开头的js文件(例如mylib&t=202502161348.js),直至mylib开头的js文件还剩3个时停止删除.如果在当前路径下遇到其他开头的js文件(例如tmp&t=202502270010.js),也同上操作.
          # 3.必须把我的以上要求也原封不动写入代码的注释中.
          # 【用户需求注释结束】

          BEIJING_TIME="${{ steps.beijing-time.outputs.time }}"
          for file in js/mylib/*.js; do
            # 提取文件开头（移除 &t= 及之后的内容）
            prefix=$(basename "$file" | sed 's/&t=.*//')
            
            # 复制原始文件到当前路径下，生成 .copy 文件
            cp "$file" "${file}.copy"
            echo "Copied original file: $file -> ${file}.copy"
            
            # 生成新文件名并替换时间戳
            new_filename=$(echo "$file" | sed "s/\&t=\d{12}\.js/\&t=${BEIJING_TIME}.js/")
            mv "$file" "$new_filename"
            echo "Renamed file: $file -> $new_filename"
            
            # 统计以 $prefix 开头且包含 &t= 的.js 文件数量
            files=$(ls js/mylib/$prefix*t=*.js)
            file_count=$(echo "$files" | wc -l)
            
            # 删除最旧的文件直到数量 <=3
            while [ $file_count -gt 3 ]; do
              if [ -z "$files" ]; then
                break
              # 按时间戳排序（字典序）
              sorted_files=$(sort "$files")
              oldest_file=$(sorted_files[0])
              rm "$oldest_file"
              echo "Deleted oldest file: $oldest_file"
              # 更新files和file_count
              files=$(ls js/mylib/$prefix*t=*.js)
              file_count=$(echo "$files" | wc -l)
            done
          done

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          
          # 添加所有修改过的.js文件，排除 .copy 文件
          git add js/mylib/!(*.copy).js
          
          # 检查是否有更改需要提交
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update JS filenames with current Beijing time and manage file count"
            git push
          fi
