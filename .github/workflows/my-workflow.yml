name: Update JS Filename Timestamp

on:
  push:
    paths:
      - 'js/mylib/*.js'

jobs:
  update-timestamp:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate Beijing Time
        id: beijing-time
        run: |
          BEIJING_TIME=$(TZ='Asia/Shanghai' date +'%Y%m%d%H%M')
          echo "::set-output name=time::$BEIJING_TIME"

      - name: 拷贝原始文件
        run: |
          BEIJING_TIME="${{ steps.beijing-time.outputs.time }}"
          modified_files=$(git diff --name-only origin/main HEAD | grep 'js/mylib/.*\.js')
          for file in $modified_files; do
            prefix=$(basename "$file" | sed 's/&t=.*//')
            file_count=$(ls js/mylib/"$prefix"&t=*.js 2>/dev/null | wc -l)

            if [ $file_count -lt 4 ]; then
              cp "$file" "$file.copy"
              echo "已将 $file 复制到 $file.copy"
            else
              echo "以 $prefix 开头的文件数量已达到或超过 4 个，无需复制 $file。"
            fi
          done

      - name: 新增文件
        run: |
          BEIJING_TIME="${{ steps.beijing-time.outputs.time }}"
          modified_files=$(git diff --name-only origin/main HEAD | grep 'js/mylib/.*\.js')
          for file in $modified_files; do
            if [[ $file =~ (.*t=)[0-9]{12}(.*) ]]; then
              new_file="${BASH_REMATCH[1]}${BEIJING_TIME}${BASH_REMATCH[2]}"
              mv "$file" "$new_file"
              echo "已将 $file 重命名为 $new_file"
            fi
          done

      - name: 控制文件数目(删除旧文件)
        run: |
          BEIJING_TIME="${{ steps.beijing-time.outputs.time }}"
          for file in js/mylib/*.js; do
            prefix=$(basename "$file" | sed 's/&t=.*//')
            file_count=$(ls js/mylib/"$prefix"&t=*.js 2>/dev/null | wc -l)
            echo "即将删除文件"
            if [ $file_count -gt 3 ]; then
              files_to_delete=$((file_count - 3))
              files_to_remove=$(ls js/mylib/"$prefix"&t=*.js | sed 's/.*&t=\([0-9]\{12\}\)\.js/\1 &/' | sort -n | head -n $files_to_delete | cut -d' ' -f2)
              for old_file in $files_to_remove; do
                if [ -n "$old_file" ]; then
                  chmod +w "$old_file"
                  if [ -f "$old_file" ]; then
                    rm "$old_file"
                    echo "已删除最旧的文件: $old_file"
                  else
                    echo "文件 $old_file 不存在，无法删除。"
                  fi
                else
                  echo "未找到要删除的最旧文件。"
                fi
              done
            else
              echo "没有需要删除的文件数"
            fi
          done

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add js/mylib/*.js
          if git diff --staged --quiet; then
            echo "没有需要提交的更改。"
          else
            git commit -m "Update JS filenames with current Beijing time and manage file count"
            git push
          fi
