name: JS 文件分析工作流

# 此工作流的目的是处理路径为 "js/my/" 下的所有 JS 文件，具体操作如下：
# 1. 提取路径下所有文件的名字并保存至数组中。
# 2. 提取每个文件的后缀。
# 一个 js 文件分为 3 部分：前缀、后缀和扩展名。例如 mylib&t=202502161348.js，前缀是 & 前的 mylib；扩展名是 .js，去除前缀和扩展名剩下的 &t=202502161348 就是后缀。
# 提到的一切时间（如 202502161348）都是北京时间。
# 3. 根据不同前缀名的文件，分别输出每个前缀对应的修改时间最早的 3 个对应文件。

on:
  push:
    paths:
      - 'js/my/*.js'

jobs:
  analyze-js-files:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 分析文件
        run: |
          # 提取 js/my 路径下所有文件的名字并保存至数组中
          files=($(find js/my/ -type f -name "*.js"))
          declare -A prefix_files

          # 遍历每个文件
          for file in "${files[@]}"; do
            # 提取文件名
            filename=$(basename "$file")
            # 提取前缀
            prefix=$(echo "$filename" | cut -d'&' -f1)
            # 提取后缀
            suffix=$(echo "$filename" | sed 's/^[^&]*&\(.*\)\.js$/\1/')
            echo "文件 $filename 的后缀是: $suffix"

            # 将文件按前缀分组
            prefix_files["$prefix"]="${prefix_files[$prefix]} $file"
          done

          # 遍历每个前缀
          for prefix in "${!prefix_files[@]}"; do
            # 按修改时间排序
            sorted_files=($(echo "${prefix_files[$prefix]}" | tr ' ' '\n' | xargs stat -c "%Y %n" | sort -n | cut -d' ' -f2-))
            # 取修改时间最早的 3 个文件
            earliest_files=("${sorted_files[@]:0:3}")

            echo "前缀为 $prefix 的修改时间最早的 3 个文件是:"
            for earliest_file in "${earliest_files[@]}"; do
              echo "  - $earliest_file"
            done
          done
